apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-dep
  labels:
    app: api-dep
spec:
  replicas: {{ .Values.k8s.api.replicas }}
  selector:
    matchLabels:
      app: api-dep
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-dep
    spec:

      restartPolicy: Always
      containers:
      - name: django
        image: gcr.io/{{ .Values.google.project }}/{{ .Values.k8s.namespace }}-django:{{ .Values.django.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.k8s.api.memory.request }}
            cpu: {{ .Values.k8s.api.cpu.request }}
          limits:
            memory: {{ .Values.k8s.api.memory.limit }}
            cpu: {{ .Values.k8s.api.cpu.limit }}

#        livenessProbe:
#          httpGet:
#            path: /api/
#            port: 8000
#          initialDelaySeconds: 30
#          periodSeconds: 10
#
#        readinessProbe:
#          httpGet:
#            path: /api/
#            port: 8000
#          initialDelaySeconds: 30
#          periodSeconds: 10
#
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /config/service-account.json

        - name: DJANGO_KEY
          value: "{{ .Values.django.key }}"

        - name: GKE_PROJECT
          value: {{ .Values.google.project }}
        - name: DOMAIN
          value: {{ .Values.google.domain }}
        - name: STATIC_BUCKET
          value: {{ .Values.google.static_bucket }}
        - name: LIFECYCLE
          value: {{ .Values.k8s.namespace }}

        ports:
        - containerPort: 8000
          name: django-port
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
      
      volumes:
      - name: config
        secret:
          secretName: creds

