apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.k8s.namespace }}-nginx-dep
  name: {{ .Values.k8s.namespace }}-nginx-dep
  namespace: {{ .Values.k8s.namespace }}

spec:
  replicas: {{ .Values.k8s.nginx.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.k8s.namespace }}-nginx-dep
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.k8s.namespace }}-nginx-dep
    spec:
      containers:
      - image: gcr.io/{{ .Values.google.project }}/{{ .Values.k8s.namespace }}-nginx:{{ .Values.nginx.tag }}
        imagePullPolicy: Always
        name: nginx
        resources:
          requests:
            memory: {{ .Values.k8s.nginx.memory.request }}
            cpu: {{ .Values.k8s.nginx.cpu.request }}
          limits:
            memory: {{ .Values.k8s.nginx.memory.limit }}
            cpu: {{ .Values.k8s.nginx.cpu.limit }}

        startupProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 5
          periodSeconds: 5

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        env:
        - name: LIFECYCLE
          value: {{ .Values.k8s.namespace }}
        - name: OAUTH_ID
          value: {{ .Values.google.oauth_id }}
        - name: STATIC_BUCKET
          value: {{ .Values.google.static_bucket }}
        - name: DOMAIN
          value: {{ .Values.google.domain }}
        ports:
        - containerPort: 80
          name: https
          protocol: TCP
